# (c) Copyright Mario "Neo" Sieg 2023. All rights reserved. mario.sieg.64@gmail.com

class float
    # Create float from IEEE-754 binary-64 bit pattern.
    static native float fromBitPattern(bits: int)

    # The maximum value of a float - (64-bit IEEE-754 binary-64).
    static const MAX_VALUE: float = fromBitPattern(0x7fefffffffffffff)

    # The minimum positive normalized value of a float - (64-bit IEEE-754 binary-64).
    static const MIN_VALUE: float = fromBitPattern(0x1)

    # The size of a float in bytes.
    static const BYTE_SIZE: int = 8

    # The size of a float in bits.
    static const BIT_SIZE: int = BYTE_SIZE * 8

    # Positive infinity for a float.
    static const POSITIVE_INFINITY: float = fromBitPattern(0x7ff0000000000000)

    # Negative infinity for a float.
    static const NEGATIVE_INFINITY: float = fromBitPattern(0xfff0000000000000)

    # Not-a-Number (NaN) value for a float.
    static const NAN: float = fromBitPattern(0x7ff8000000000000)

    # The minimum positive normalized value of a float.
    static const MIN_NORMAL: float = fromBitPattern(0x0010000000000000)

    # The maximum exponent value for a float.
    static const MAX_EXPONENT: int = 1023

    # The minimum exponent value for a float.
    static const MIN_EXPONENT: int = -1022

    # Mathematical constant e (Euler's number).
    static const E: float = 2.7182818284590452354

    # Mathematical constant pi (Ï€).
    static const PI: float = 3.14159265358979323846

    # Conversion factor from degrees to radians.
    static const DEGREES_TO_RADIANS: float = 0.017453292519943295

    # Conversion factor from radians to degrees.
    static const RADIANS_TO_DEGREES: float = 57.29577951308232
end

